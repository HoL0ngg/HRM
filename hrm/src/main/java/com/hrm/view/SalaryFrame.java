/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.hrm.view;
import com.hrm.dao.DepartmentDAO;
import com.hrm.dao.EmployeeDAO;
import com.hrm.dao.SalaryChangeHistoryDAO;
import com.hrm.dao.SalaryDAO;
import com.hrm.model.Department;
import com.hrm.model.Employee;
import com.hrm.model.Salary;
import com.hrm.model.SalaryChangeHistory;
import com.hrm.utils.StatusRenderer;
import com.toedter.calendar.JDateChooser;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.Font;
import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.GroupLayout.Alignment;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Hoang Vu
 */
public class SalaryFrame extends javax.swing.JFrame {

    /**
     * Creates new form Salarytest
     */
    public SalaryFrame() {
        initComponents();
        loadListSalariesToTable();
        loadDataToYeuCauTangLuongTable();
        loadDataToYeuCauTangLuongDaXemTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnMenu = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtIDEmployee = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblPhongBan = new javax.swing.JLabel();
        lblViTri = new javax.swing.JLabel();
        lblHinhThucLamViec = new javax.swing.JLabel();
        lblHoVaTen = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        lblTongLuongTheoGio = new javax.swing.JLabel();
        lblTongLuongTangCa = new javax.swing.JLabel();
        lblChuyenCan = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        lblTongLuong = new javax.swing.JLabel();
        dataChooseNgayHieuLuc = new com.toedter.calendar.JDateChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtGhiChu = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        txtThuong = new javax.swing.JTextField();
        txtKhauTru = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblDanhSachLuong = new javax.swing.JTable();
        cbbThang = new javax.swing.JComboBox<>();
        btnListSalaries = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblYeuCauTangLuong = new javax.swing.JTable();
        btnRefreshDataYeuCauThayDoi = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblYeuCauTangLuongDaXem = new javax.swing.JTable();
        btnRefreshDataYeuCauDaXem = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnMenu.setBackground(new java.awt.Color(245, 143, 82));

        jLabel1.setFont(new java.awt.Font("Segoe UI Emoji", 1, 16)); // NOI18N
        jLabel1.setText("Luong va phuc loi");

        javax.swing.GroupLayout pnMenuLayout = new javax.swing.GroupLayout(pnMenu);
        pnMenu.setLayout(pnMenuLayout);
        pnMenuLayout.setHorizontalGroup(
            pnMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnMenuLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnMenuLayout.setVerticalGroup(
            pnMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnMenuLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel2.setText("Thông tin lương");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Mã nhân viên");

        txtIDEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDEmployeeActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Họ và tên");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Phòng ban");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Vị trí");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Hình thức làm việc");

        lblPhongBan.setText("jLabel19");

        lblViTri.setText("jLabel20");

        lblHinhThucLamViec.setText("jLabel21");

        lblHoVaTen.setText("jLabel29");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHoVaTen)
                    .addComponent(txtIDEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(106, 106, 106)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblViTri)
                    .addComponent(lblPhongBan))
                .addGap(80, 80, 80)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(lblHinhThucLamViec)
                .addContainerGap(122, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtIDEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)
                    .addComponent(lblPhongBan)
                    .addComponent(lblHinhThucLamViec))
                .addGap(26, 26, 26)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(lblViTri)
                    .addComponent(lblHoVaTen))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jLabel8.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel8.setText("Lương và phúc lợi");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Tổng lương theo giờ");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Tổng lương tăng ca");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("Chuyên cần");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setText("Thưởng");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setText("BHXH");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setText("Thuế");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel15.setText("Khấu trừ");

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel16.setText("Tổng lương");

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel17.setText("Ngày hiệu lực");

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel18.setText("Ghi chú");

        lblTongLuongTheoGio.setText("jLabel22");

        lblTongLuongTangCa.setText("..............................");

        lblChuyenCan.setText("............................");

        jLabel25.setText("jLabel25");

        jLabel26.setText("jLabel26");

        lblTongLuong.setText("..........................................");

        txtGhiChu.setColumns(20);
        txtGhiChu.setRows(5);
        jScrollPane2.setViewportView(txtGhiChu);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTongLuongTangCa)
                            .addComponent(lblTongLuongTheoGio)
                            .addComponent(lblChuyenCan)
                            .addComponent(txtThuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(72, 72, 72)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGap(330, 330, 330)
                                        .addComponent(jButton1))
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGap(37, 37, 37)
                                        .addComponent(lblTongLuong))))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel15))
                                .addGap(27, 27, 27)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel26)
                                            .addComponent(jLabel25))
                                        .addGap(55, 55, 55)
                                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel18)
                                            .addComponent(jLabel17)))
                                    .addComponent(txtKhauTru, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(dataChooseNgayHieuLuc, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))))))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(jLabel13)
                        .addComponent(jLabel17)
                        .addComponent(lblTongLuongTheoGio)
                        .addComponent(jLabel26))
                    .addComponent(dataChooseNgayHieuLuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel14)
                            .addComponent(jLabel18)
                            .addComponent(lblTongLuongTangCa)
                            .addComponent(jLabel25))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel15)
                            .addComponent(lblChuyenCan)
                            .addComponent(txtKhauTru, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel16)
                    .addComponent(lblTongLuong)
                    .addComponent(txtThuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã nhân viên", "Họ tên", "Vị trí", "Lương theo giờ", "Lương tăng ca", "Chuyên cần", "Thưởng", "Khấu trừ", "Tổng lương"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel8))
                        .addGap(0, 676, Short.MAX_VALUE))
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 817, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(116, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Tạo phiếu lương", jPanel1);

        tblDanhSachLuong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblDanhSachLuong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDanhSachLuongMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblDanhSachLuong);

        cbbThang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", " " }));
        cbbThang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbThangActionPerformed(evt);
            }
        });

        btnListSalaries.setText("Xem danh sách");
        btnListSalaries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListSalariesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 829, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addComponent(cbbThang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnListSalaries)
                .addGap(69, 69, 69))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(cbbThang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addComponent(btnListSalaries)
                .addGap(35, 35, 35)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Danh sách nhân viên", jPanel2);

        tblYeuCauTangLuong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblYeuCauTangLuong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblYeuCauTangLuongMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblYeuCauTangLuong);

        btnRefreshDataYeuCauThayDoi.setText("Refresh Data");
        btnRefreshDataYeuCauThayDoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshDataYeuCauThayDoiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 817, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRefreshDataYeuCauThayDoi)
                .addGap(89, 89, 89))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 120, Short.MAX_VALUE)
                .addComponent(btnRefreshDataYeuCauThayDoi)
                .addGap(42, 42, 42)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Yêu cầu thay đổi", jPanel3);

        tblYeuCauTangLuongDaXem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(tblYeuCauTangLuongDaXem);

        btnRefreshDataYeuCauDaXem.setText("Refresh Data");
        btnRefreshDataYeuCauDaXem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshDataYeuCauDaXemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 829, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRefreshDataYeuCauDaXem)
                .addGap(73, 73, 73))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 120, Short.MAX_VALUE)
                .addComponent(btnRefreshDataYeuCauDaXem)
                .addGap(42, 42, 42)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Lịch sử thay đổi", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jTabbedPane1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtIDEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDEmployeeActionPerformed
        try {
            int id = Integer.parseInt(this.txtIDEmployee.getText());
            EmployeeDAO employeeDao = new EmployeeDAO();
            Employee employee = employeeDao.selectByID(id);
            if (employee == null) {
                JOptionPane.showMessageDialog(this, "Không tìm thấy nhân viên với ID: " + id, "Lỗi", 0);
            } else {
                SalaryDAO salaryDAO = new SalaryDAO();
                Salary salary = salaryDAO.selectByEmployeeID(employee.getId());
                this.lblPhongBan.setText(employee.getDepartment().getName());
                this.lblViTri.setText(employee.getPosition().getName());
                this.lblHinhThucLamViec.setText("" + String.valueOf(employee.getWork_type()));
                this.lblHoVaTen.setText(employee.getName());
                this.lblTongLuongTheoGio.setText(salary.getPositionSalary() + "");
                this.txtGhiChu.setText(salary.getNote());
                this.txtKhauTru.setText(salary.getDeductions() + "");
                this.txtThuong.setText(salary.getBonus() + "");
                this.lblChuyenCan.setText(salary.getAttendance() + "");
                this.lblTongLuong.setText(salary.getNetSalary() + "");
                
                this.lblTongLuongTangCa.setText(salary.getOvertimeSalary() + "");
                
                LocalDate payday = salary.getPayday();
                Date date = java.util.Date.from(payday.atStartOfDay(ZoneId.systemDefault()).toInstant());
                // Thiết lập ngày cho JDateChooser
                this.dataChooseNgayHieuLuc.setDate(date);
            }
        } catch (NumberFormatException var7) {
            JOptionPane.showMessageDialog(this, "ID không hợp lệ. Vui lòng nhập số nguyên.", "Lỗi", 0);
        } catch (Exception var8) {
            Exception ex = var8;
            JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi: " + ex.getMessage(), "Lỗi", 0);
            ex.printStackTrace();
        }
    }//GEN-LAST:event_txtIDEmployeeActionPerformed

    private void cbbThangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbThangActionPerformed
        int selectedMonth = this.cbbThang.getSelectedIndex() + 1;
        SalaryDAO salaryDAO = SalaryDAO.getInstance();
        ArrayList<Salary> salaryList = salaryDAO.selectByMonth(selectedMonth);
        Object[][] tableData = new Object[salaryList.size()][9];

        for(int i = 0; i < salaryList.size(); ++i) {
            Salary salary = (Salary)salaryList.get(i);
            tableData[i][0] = salary.getEmployee().getId();
            tableData[i][1] = salary.getEmployee().getName();
            tableData[i][2] = salary.getPosition().getName();
            tableData[i][3] = salary.getPositionSalary();
            tableData[i][4] = salary.getOvertimeSalary();
            tableData[i][5] = salary.getAttendance();
            tableData[i][6] = salary.getBonus();
            tableData[i][7] = salary.getDeductions();
            tableData[i][8] = salary.getNetSalary();
        }

        DefaultTableModel model = new DefaultTableModel(tableData, new String[]{"Mã nhân viên", "Họ và tên", "Vị trí", "Lương theo giờ", "Lương tăng ca", "Chuyên cần", "Thưởng", "Khấu trừ", "Tổng lương"});
        this.tblDanhSachLuong.setModel(model);
    }//GEN-LAST:event_cbbThangActionPerformed

    private void btnListSalariesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListSalariesActionPerformed
        loadListSalariesToTable();
    }//GEN-LAST:event_btnListSalariesActionPerformed

    private void btnRefreshDataYeuCauThayDoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshDataYeuCauThayDoiActionPerformed
        loadDataToYeuCauTangLuongTable();
    }//GEN-LAST:event_btnRefreshDataYeuCauThayDoiActionPerformed

    private void tblYeuCauTangLuongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblYeuCauTangLuongMouseClicked
        int selectedRow = this.tblYeuCauTangLuong.getSelectedRow();
        if (selectedRow != -1) {
            int salaryChangeId = (Integer)this.tblYeuCauTangLuong.getValueAt(selectedRow, 0);
            SalaryChangeHistoryDAO salaryChangeHistoryDAO = SalaryChangeHistoryDAO.getInstance();
            SalaryChangeHistory salaryChangeHistory = salaryChangeHistoryDAO.selectByID(salaryChangeId);
            SalaryUpdateDialog dialog = new SalaryUpdateDialog((Frame)null, salaryChangeHistory);
            dialog.setVisible(true);
        }
    }//GEN-LAST:event_tblYeuCauTangLuongMouseClicked

    private void btnRefreshDataYeuCauDaXemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshDataYeuCauDaXemActionPerformed
        loadDataToYeuCauTangLuongDaXemTable();
    }//GEN-LAST:event_btnRefreshDataYeuCauDaXemActionPerformed

    private void tblDanhSachLuongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDanhSachLuongMouseClicked
        int selectedRow = this.tblDanhSachLuong.getSelectedRow();
        if (selectedRow >= 0) {
            String employeeName = this.tblDanhSachLuong.getValueAt(selectedRow, 1).toString();
            String position = this.tblDanhSachLuong.getValueAt(selectedRow, 2).toString();
            String totalSalary = this.tblDanhSachLuong.getValueAt(selectedRow, 8).toString();
            String overtimeSalary = this.tblDanhSachLuong.getValueAt(selectedRow, 4).toString();
            String bonus = this.tblDanhSachLuong.getValueAt(selectedRow, 6).toString();
            String deductions = this.tblDanhSachLuong.getValueAt(selectedRow, 7).toString();
            String note = "";
            SalaryDetailDialog.showSalaryDetailDialog((JFrame)null, employeeName, position, totalSalary, overtimeSalary, bonus, deductions, note);
        }
    }//GEN-LAST:event_tblDanhSachLuongMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SalaryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SalaryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SalaryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SalaryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SalaryFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnListSalaries;
    private javax.swing.JButton btnRefreshDataYeuCauDaXem;
    private javax.swing.JButton btnRefreshDataYeuCauThayDoi;
    private javax.swing.JComboBox<String> cbbThang;
    private com.toedter.calendar.JDateChooser dataChooseNgayHieuLuc;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblChuyenCan;
    private javax.swing.JLabel lblHinhThucLamViec;
    private javax.swing.JLabel lblHoVaTen;
    private javax.swing.JLabel lblPhongBan;
    private javax.swing.JLabel lblTongLuong;
    private javax.swing.JLabel lblTongLuongTangCa;
    private javax.swing.JLabel lblTongLuongTheoGio;
    private javax.swing.JLabel lblViTri;
    private javax.swing.JPanel pnMenu;
    private javax.swing.JTable tblDanhSachLuong;
    private javax.swing.JTable tblYeuCauTangLuong;
    private javax.swing.JTable tblYeuCauTangLuongDaXem;
    private javax.swing.JTextArea txtGhiChu;
    private javax.swing.JTextField txtIDEmployee;
    private javax.swing.JTextField txtKhauTru;
    private javax.swing.JTextField txtThuong;
    // End of variables declaration//GEN-END:variables

    private void loadListSalariesToTable() {
        SalaryDAO salaryDAO = SalaryDAO.getInstance();
        ArrayList<Salary> salaryList = salaryDAO.selectAll();
        Object[][] tableData = new Object[salaryList.size()][9];

        for(int i = 0; i < salaryList.size(); ++i) {
            Salary salary = (Salary)salaryList.get(i);
            tableData[i][0] = salary.getEmployee().getId();
            tableData[i][1] = salary.getEmployee().getName();
            tableData[i][2] = salary.getPosition().getName();
            tableData[i][3] = salary.getPositionSalary();
            tableData[i][4] = salary.getOvertimeSalary();
            tableData[i][5] = salary.getAttendance();
            tableData[i][6] = salary.getBonus();
            tableData[i][7] = salary.getDeductions();
            tableData[i][8] = salary.getNetSalary();
        }

        DefaultTableModel model = new DefaultTableModel(tableData, new String[]{"Mã nhân viên", "Họ và tên", "Vị trí", "Lương theo giờ", "Lương tăng ca", "Chuyên cần", "Thưởng", "Khấu trừ", "Tổng lương"});
        this.tblDanhSachLuong.setModel(model);
    }

    private void loadDataToYeuCauTangLuongTable() {
        this.tblYeuCauTangLuong.setRowHeight(30);
        SalaryChangeHistoryDAO salaryChangeHistoryDAO = SalaryChangeHistoryDAO.getInstance();
        ArrayList<SalaryChangeHistory> salaryChangeList = salaryChangeHistoryDAO.selectAllWithEmployee();
        Object[][] tableData = new Object[salaryChangeList.size()][7];

        for(int i = 0; i < salaryChangeList.size(); ++i) {
            SalaryChangeHistory history = (SalaryChangeHistory)salaryChangeList.get(i);
            tableData[i][0] = history.getId();
            tableData[i][1] = history.getEmployee().getName();
            tableData[i][2] = history.getOldSalary();
            tableData[i][3] = history.getNewSalary();
            tableData[i][4] = history.getChangeDate();
            tableData[i][5] = history.getReasons();
            tableData[i][6] = history.getStatus();
        }

        DefaultTableModel model = new DefaultTableModel(tableData, new String[]{"ID", "Nhân viên", "Lương cũ", "Lương mới", "Ngày gửi yêu cầu", "Lý do", "Trạng thái"});
        this.tblYeuCauTangLuong.setModel(model);
        this.tblYeuCauTangLuong.getColumnModel().getColumn(6).setCellRenderer(new StatusRenderer());
    }

    private void loadDataToYeuCauTangLuongDaXemTable() {
        SalaryChangeHistoryDAO salaryChangeHistoryDAO = SalaryChangeHistoryDAO.getInstance();
        ArrayList<SalaryChangeHistory> salaryChangeList = salaryChangeHistoryDAO.selectReviewed();
        Object[][] tableData = new Object[salaryChangeList.size()][8];

        for(int i = 0; i < salaryChangeList.size(); ++i) {
            SalaryChangeHistory history = (SalaryChangeHistory)salaryChangeList.get(i);
            Object[] var10000 = tableData[i];
            Object[] var10003 = new Object[]{history.getEmployee().getId()};
            var10000[0] = "NV" + String.format("%03d", var10003);
            tableData[i][1] = history.getEmployee().getName();
            tableData[i][2] = history.getOldSalary();
            tableData[i][3] = history.getNewSalary();
            tableData[i][4] = history.getReasons();
            tableData[i][5] = history.getChangeDate();
            tableData[i][6] = history.getApprovedBy().getName();
            tableData[i][7] = history.getComments();
        }

        DefaultTableModel model = new DefaultTableModel(tableData, new String[]{"Mã nhân viên", "Họ và tên", "Lương hiện tại", "Lương đề xuất", "Lý do yêu cầu", "Ngày thay đổi", "Người duyệt", "Phản hồi"});
        this.tblYeuCauTangLuongDaXem.setModel(model);
    }
}
/*
private void cbbThangActionPerformed(ActionEvent evt) {
        int selectedMonth = this.cbbThang.getSelectedIndex() + 1;
        SalaryDAO salaryDAO = SalaryDAO.getInstance();
        ArrayList<Salary> salaryList = salaryDAO.selectByMonth(selectedMonth);
        Object[][] tableData = new Object[salaryList.size()][9];

        for(int i = 0; i < salaryList.size(); ++i) {
            Salary salary = (Salary)salaryList.get(i);
            tableData[i][0] = salary.getEmployee().getId();
            tableData[i][1] = salary.getEmployee().getName();
            tableData[i][2] = salary.getPosition().getName();
            tableData[i][3] = salary.getPositionSalary();
            tableData[i][4] = salary.getOvertimeSalary();
            tableData[i][5] = salary.getAttendance();
            tableData[i][6] = salary.getBonus();
            tableData[i][7] = salary.getDeductions();
            tableData[i][8] = salary.getNetSalary();
        }

        DefaultTableModel model = new DefaultTableModel(tableData, new String[]{"Mã nhân viên", "Họ và tên", "Vị trí", "Lương theo giờ", "Lương tăng ca", "Chuyên cần", "Thưởng", "Khấu trừ", "Tổng lương"});
        this.tblDanhSachLuong.setModel(model);
    }

    private void tblDanhSachLuongMouseClicked(MouseEvent evt) {
        int selectedRow = this.tblDanhSachLuong.getSelectedRow();
        if (selectedRow >= 0) {
            String employeeName = this.tblDanhSachLuong.getValueAt(selectedRow, 1).toString();
            String position = this.tblDanhSachLuong.getValueAt(selectedRow, 2).toString();
            String totalSalary = this.tblDanhSachLuong.getValueAt(selectedRow, 8).toString();
            String overtimeSalary = this.tblDanhSachLuong.getValueAt(selectedRow, 4).toString();
            String bonus = this.tblDanhSachLuong.getValueAt(selectedRow, 6).toString();
            String deductions = this.tblDanhSachLuong.getValueAt(selectedRow, 7).toString();
            String note = "";
            SalaryDetailDialog.showSalaryDetailDialog((JFrame)null, employeeName, position, totalSalary, overtimeSalary, bonus, deductions, note);
        }

    }

    private void cbHinhThucLamViecActionPerformed(ActionEvent evt) {
    }

    private void btnMoCheckBoxActionPerformed(ActionEvent evt) {
        if (this.pnCheckbox.isVisible()) {
            this.pnCheckbox.setVisible(false);
        } else {
            this.pnCheckbox.setVisible(true);
        }

    }

    private void cbPhongBanActionPerformed(ActionEvent evt) {
        DepartmentDAO departmentDAO = DepartmentDAO.getInstance();
        ArrayList<Department> departmentList = departmentDAO.seclectAll();
        String[] columnNames = new String[]{"ID", "Tên phòng ban"};
        Object[][] data = new Object[departmentList.size()][2];

        for(int i = 0; i < departmentList.size(); ++i) {
            Department dept = (Department)departmentList.get(i);
            data[i][0] = dept.getId();
            data[i][1] = dept.getName();
        }

        final JTable departmentTable = new JTable(data, columnNames);
        departmentTable.setSelectionMode(0);
        JScrollPane scrollPane = new JScrollPane(departmentTable);
        final JDialog dialog = new JDialog();
        dialog.setTitle("Chọn Phòng Ban");
        dialog.setSize(400, 300);
        dialog.setLocationRelativeTo((Component)null);
        dialog.add(scrollPane, "Center");
        JButton btnChonPhong = new JButton("Chọn Phòng");
        dialog.add(btnChonPhong, "South");
        btnChonPhong.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                int selectedRow = departmentTable.getSelectedRow();
                if (selectedRow >= 0) {
                    int departmentId = (Integer)departmentTable.getValueAt(selectedRow, 0);
                    String departmentName = (String)departmentTable.getValueAt(selectedRow, 1);
                    JOptionPane.showMessageDialog((Component)null, "Bạn đã chọn phòng ban: " + departmentName + " (ID: " + departmentId + ")");
                    dialog.dispose();
                } else {
                    JOptionPane.showMessageDialog((Component)null, "Vui lòng chọn một phòng ban");
                }

            }
        });
        dialog.setVisible(true);
    }

    private void tblYeuCauTangLuongMouseClicked(MouseEvent evt) {
        int selectedRow = this.tblYeuCauTangLuong.getSelectedRow();
        if (selectedRow != -1) {
            int salaryChangeId = (Integer)this.tblYeuCauTangLuong.getValueAt(selectedRow, 0);
            SalaryChangeHistoryDAO salaryChangeHistoryDAO = SalaryChangeHistoryDAO.getInstance();
            SalaryChangeHistory salaryChangeHistory = salaryChangeHistoryDAO.seclectByID(salaryChangeId);
            SalaryUpdateDialog dialog = new SalaryUpdateDialog((Frame)null, salaryChangeHistory);
            dialog.setVisible(true);
        }

    }

    private void btnRefreshDSYeuCauTangLuongActionPerformed(ActionEvent evt) {
        this.loadDataToYeuCauTangLuongTable();
    }

    private void btnRefreshLichSuYeuCauActionPerformed(ActionEvent evt) {
        this.loadDataToYeuCauTangLuongDaXemTable();
    }

    public static void main(String[] args) {
        try {
            UIManager.LookAndFeelInfo[] var12 = UIManager.getInstalledLookAndFeels();
            int var2 = var12.length;

            for(int var3 = 0; var3 < var2; ++var3) {
                UIManager.LookAndFeelInfo info = var12[var3];
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException var5) {
            Logger.getLogger(SalaryFrame1.class.getName()).log(Level.SEVERE, (String)null, var5);
        } catch (InstantiationException var6) {
            Logger.getLogger(SalaryFrame1.class.getName()).log(Level.SEVERE, (String)null, var6);
        } catch (IllegalAccessException var7) {
            Logger.getLogger(SalaryFrame1.class.getName()).log(Level.SEVERE, (String)null, var7);
        } catch (UnsupportedLookAndFeelException var8) {
            UnsupportedLookAndFeelException ex = var8;
            Logger.getLogger(SalaryFrame1.class.getName()).log(Level.SEVERE, (String)null, ex);
        }

        EventQueue.invokeLater(new Runnable() {
            public void run() {
                (new SalaryFrame1()).setVisible(true);
            }
        });
    }

    private void loadListSalariesToTable() {
        SalaryDAO salaryDAO = SalaryDAO.getInstance();
        ArrayList<Salary> salaryList = salaryDAO.seclectAll();
        Object[][] tableData = new Object[salaryList.size()][9];

        for(int i = 0; i < salaryList.size(); ++i) {
            Salary salary = (Salary)salaryList.get(i);
            tableData[i][0] = salary.getEmployee().getId();
            tableData[i][1] = salary.getEmployee().getName();
            tableData[i][2] = salary.getPosition().getName();
            tableData[i][3] = salary.getPositionSalary();
            tableData[i][4] = salary.getOvertimeSalary();
            tableData[i][5] = salary.getAttendance();
            tableData[i][6] = salary.getBonus();
            tableData[i][7] = salary.getDeductions();
            tableData[i][8] = salary.getNetSalary();
        }

        DefaultTableModel model = new DefaultTableModel(tableData, new String[]{"Mã nhân viên", "Họ và tên", "Vị trí", "Lương theo giờ", "Lương tăng ca", "Chuyên cần", "Thưởng", "Khấu trừ", "Tổng lương"});
        this.tblDanhSachLuong.setModel(model);
    }

    private void loadDataToYeuCauTangLuongTable() {
        this.tblYeuCauTangLuong.setRowHeight(30);
        SalaryChangeHistoryDAO salaryChangeHistoryDAO = SalaryChangeHistoryDAO.getInstance();
        ArrayList<SalaryChangeHistory> salaryChangeList = salaryChangeHistoryDAO.selectAllWithEmployee();
        Object[][] tableData = new Object[salaryChangeList.size()][7];

        for(int i = 0; i < salaryChangeList.size(); ++i) {
            SalaryChangeHistory history = (SalaryChangeHistory)salaryChangeList.get(i);
            tableData[i][0] = history.getId();
            tableData[i][1] = history.getEmployee().getName();
            tableData[i][2] = history.getOldSalary();
            tableData[i][3] = history.getNewSalary();
            tableData[i][4] = history.getChangeDate();
            tableData[i][5] = history.getReasons();
            tableData[i][6] = history.getStatus();
        }

        DefaultTableModel model = new DefaultTableModel(tableData, new String[]{"ID", "Nhân viên", "Lương cũ", "Lương mới", "Ngày gửi yêu cầu", "Lý do", "Trạng thái"});
        this.tblYeuCauTangLuong.setModel(model);
        this.tblYeuCauTangLuong.getColumnModel().getColumn(6).setCellRenderer(new StatusRenderer());
    }

    private void loadDataToYeuCauTangLuongDaXemTable() {
        SalaryChangeHistoryDAO salaryChangeHistoryDAO = SalaryChangeHistoryDAO.getInstance();
        ArrayList<SalaryChangeHistory> salaryChangeList = salaryChangeHistoryDAO.selectReviewed();
        Object[][] tableData = new Object[salaryChangeList.size()][8];

        for(int i = 0; i < salaryChangeList.size(); ++i) {
            SalaryChangeHistory history = (SalaryChangeHistory)salaryChangeList.get(i);
            Object[] var10000 = tableData[i];
            Object[] var10003 = new Object[]{history.getEmployee().getId()};
            var10000[0] = "NV" + String.format("%03d", var10003);
            tableData[i][1] = history.getEmployee().getName();
            tableData[i][2] = history.getOldSalary();
            tableData[i][3] = history.getNewSalary();
            tableData[i][4] = history.getReasons();
            tableData[i][5] = history.getChangeDate();
            tableData[i][6] = history.getApprovedBy().getName();
            tableData[i][7] = history.getComments();
        }

        DefaultTableModel model = new DefaultTableModel(tableData, new String[]{"Mã nhân viên", "Họ và tên", "Lương hiện tại", "Lương đề xuất", "Lý do yêu cầu", "Ngày thay đổi", "Người duyệt", "Phản hồi"});
        this.tblYeuCauTangLuongDaXem.setModel(model);
    }
}
*/